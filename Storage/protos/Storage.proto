syntax = "proto3";

package storage;

service StorageService {
	rpc ReadStorage (ReadStorageRequest) returns (ReadStorageReply);
	rpc WriteStorage (WriteStorageRequest) returns (WriteStorageReply);
	rpc UpdateIf (UpdateIfRequest) returns (UpdateIfReply);
	rpc SendNodesURL(SendNodesURLRequest) returns (SendNodesURLReply);
	rpc Status(StatusRequest) returns (StatusReply);
	rpc List(ListRequest) returns (ListReply);
	rpc Crash(CrashRequest) returns (CrashReply);
	rpc Populate(PopulateRequest) returns (PopulateReply);
	rpc RequestLog (GossipRequest) returns (GossipReply);
}

//// structures ////

message DidaVersion {
	int32 versionNumber = 1;
	int32 replicaId = 2;
}

message DidaRecord {
	string id = 1;
	DidaVersion DidaVersion = 2;
	string val = 3;
}

////////////////////

message ReadStorageRequest { 
	string id = 1;
	DidaVersion DidaVersion = 2;
}

message ReadStorageReply {
	DidaRecord DidaRecord = 1;
}

message WriteStorageRequest {
	string id = 1;
	string val = 2;
}

message WriteStorageReply {
	DidaVersion DidaVersion = 1;
}

message UpdateIfRequest {
	string id = 1;
	string oldValue = 2;
	string newValue = 3;
}

message UpdateIfReply {
	DidaVersion DidaVersion = 1;
}

message StatusRequest {

}

message StatusReply {

}

message ListRequest {

}

message ListReply {

}

message CrashRequest {

}

message CrashReply{

}

message SendNodesURLRequest {
	map<string, string> workers = 1;
	map<string, string> storages = 2;
}

message SendNodesURLReply {

}

message PopulateRequest {
	string id = 1;
	string val = 2;
}

message PopulateReply {

}

message GossipRequest { 
	string LogRequest = 1;
}

message GossipReply {
	repeated LogStruct LogReply = 1;
}

message LogStruct{
	string id = 1;
	optional string oldVal = 2;
	string newVal = 3;
}